---
import type { CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Comments from '../components/Comments.astro';
import MatomoTracking from '../components/MatomoTracking.astro';

import '../styles/markdown.scss';

type Props = CollectionEntry<'things'>['data'];

const { title, description, pubDate, category, heroImage, ogImage, link } = Astro.props;

const ogImageToUse = ogImage?.src || heroImage?.src || undefined;
const capitalizedCategory = category.charAt(0).toUpperCase() + category.slice(1);
---

<html lang="en">
  <head>
    <BaseHead title={`${capitalizedCategory}: ${title}`} description={description} image={ogImageToUse} />
    <MatomoTracking />
  </head>

  <body>
    <Header activePath="things" />
    <main class="layout-blog-post">
      <article class="md">
        <div class="title">
          <span class="meta">
            <span class="category">
              in <a href={`/things/${category}/`} class="tag">{category}</a>
            </span>
          </span>
          <div class="page-title">
            <h1>{title}</h1>
            {link && (
              <a href={link} target="_blank" rel="noopener noreferrer" class="get-link">
                Get
              </a>
            )}
          </div>
        </div>
        <slot />
      </article>
    </main>
    <Footer />
  </body>
</html>

<style lang="scss">
  .layout-blog-post {
    margin-top: 4rem;
  }

  .page-title {
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .title {
    margin: 1rem 0 2rem 0;

    h1{
      margin-top: .5rem;
    }
  }

  .get-link {
    background: var(--yellow-5);
    padding: .25rem .875rem;
    color: var(--yellow-12);
    text-decoration: none;
    font-size: 1rem;
    border-radius: 24px;
    display: flex;
    align-items: center;
    gap: .5rem;

    &:before{
      content: 'â†—';
      color: var(--yellow-11);
      transition: color .2s ease-in-out;
    }

    &:hover{
      &:before{
        color: var(--yellow-12);
      }
    }
  }

  .meta{
    font-family: var(--font-family-mono);
    text-transform: uppercase;
    font-size: .875rem;
    color: var(--gray-10);
  }
  
  .tag{
    padding: 2px 6px;
    background: var(--gray-3);
    border-radius: 6px;
    color: var(--gray-11);
    text-decoration: none;
  }

  .md a.tag:not(.tile-list-tile){
    color: var(--gray-11);

    &:hover{
      background: var(--gray-4);
      outline: 2px solid var(--gray-5);
    }
  }

  .date{
    color: var(--gray-10);
    font-size: .875rem;
  }

  .last-updated-on {
    margin-left: 1rem;
  }
</style>
