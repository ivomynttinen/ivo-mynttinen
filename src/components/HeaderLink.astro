---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + subpath?.[0];
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
  <slot />
</a>

<style lang="scss" scoped>
  a {
    display: inline-flex;
    align-items: center;
    text-decoration: none;
    color: var(--gray-11);
    font-size: .875rem;
    gap: 4px;
    padding: .125rem .5rem;
    line-height: 1.25rem;
    border-radius: 6px;
    transition: color 0.2s, background 0.2s, -webkit-text-stroke-width 0.2s, -webkit-text-stroke-color 0.2s;

    &:after{
      font-size: 0.75em;
      color: var(--gray-6);
      transition: color 0.2s, transform 0.2s;
    }

    &:hover{
      color: var(--gray-12);
      background: var(--gray-2);

      &:after{
        color: var(--gray-8);
        transform: translate(2px, -2px);
      }
    }

    &:active{
      color: var(--gray-12);
      background: var(--gray-3);

      &:after{
        color: var(--gray-9);
      }
    }

    &.active{
      color: var(--gray-12);
      background: var(--gray-3);
      -webkit-text-stroke-width: .2px;
      -webkit-text-stroke-color: var(--gray-12);
    }
  }

  a[href*="//"]:not([href*="ivomynttinen.com"])::after,
  a[href*="//"]:not([href*="localhost"])::after{
    content: ' â†—';
  }
</style>
