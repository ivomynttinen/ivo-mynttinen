---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import MatomoTracking from '../../components/MatomoTracking.astro';
import FormattedDate from '../../components/FormattedDate.astro';

export async function getStaticPaths() {
  const posts = await getCollection('things');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<'things'>;

const post = Astro.props;
const { Content } = await post.render();
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={post.data.title} description={post.data.description} />
    <MatomoTracking />
  </head>

  <body>
    <Header activePath="things" />
    <main>
      <article>
        {post.data.heroImage && (
          <div class="hero-image">
            <img width={1020} height={510} src={post.data.heroImage.src} alt="" />
          </div>
        )}
        <div class="prose">
          <div class="title">
            <div class="date">
              <FormattedDate date={post.data.pubDate} />
              {
                post.data.updatedDate && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={post.data.updatedDate} />
                  </div>
                )
              }
            </div>
            <h1>{post.data.title}</h1>
            <div class="metadata">
              <p><span class="category">{post.data.category}</span></p>
              {post.data.price && <p>Price: ${post.data.price}</p>}
              {post.data.link && <p><a href={post.data.link} target="_blank" rel="noopener noreferrer">View Product â†’</a></p>}
            </div>
            <hr />
          </div>
          <Content />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html> 
