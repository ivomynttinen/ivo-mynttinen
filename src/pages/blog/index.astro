---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

// Sort posts in descending order of publication date
const posts = (await getCollection('blog')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Separate the latest post from the rest
const [latestPost, ...otherPosts] = posts;

// Group the remaining posts by year
const postsByYear = otherPosts.reduce((acc, post) => {
  const year = post.data.pubDate.getFullYear();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {});
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <main class="layout-blog">
      <h1>Blog</h1>
      <section>
        <div>
          <h2>Latest Post</h2>
          <a href={`/blog/${latestPost.slug}/`}>
            <h4 class="title">{latestPost.data.title}</h4>
            <p class="date">
              <FormattedDate date={latestPost.data.pubDate} />
            </p>
          </a>
        </div>
        {
          Object.entries(postsByYear).map(([year, posts]) => (
            <div>
              <h2>{year}</h2>
              <ul>
                {
                  posts.map((post) => (
                    <li>
                      <a href={`/blog/${post.slug}/`}>
                        <h4 class="title">{post.data.title}</h4>
                        <FormattedDate date={post.data.pubDate} />
                      </a>
                    </li>
                  ))
                }
              </ul>
            </div>
          ))
        }
      </section>
    </main>
    <Footer />
  </body>
</html>

<style lang="scss">
.layout-blog{
  margin-top: 3rem;
}
</style>
